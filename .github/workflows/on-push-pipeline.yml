name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 21
          cache: maven

      - name: Run Unit Tests with Coverage
        run: mvn clean verify -DskipITs --batch-mode

      - name: Upload Unit Test Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-unit-tests
          path: target/jacoco-unit-tests.exec

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 21
          cache: maven

      - name: Restore PostgreSQL Docker Image from Cache
        id: cache-postgres
        uses: actions/cache@v3
        with:
          path: ~/.docker-cache/postgres
          key: ${{ runner.os }}-postgres-16-alpine

      - name: Load or Pull PostgreSQL Docker Image
        run: |
          if [ -f ~/.docker-cache/postgres/postgres.tar ]; then
            echo "Loading Postgres Docker image from cache..."
            docker load -i ~/.docker-cache/postgres/postgres.tar
          else
            echo "Pulling Postgres Docker image..."
            docker pull postgres:16-alpine
            mkdir -p ~/.docker-cache/postgres
            docker save postgres:16-alpine -o ~/.docker-cache/postgres/postgres.tar
          fi

      - name: Run Integration Tests with Coverage
        run: |
          mvn verify -DskipUnitTests=true --batch-mode

      - name: Upload Merged Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-merged-report
          path: target/site/jacoco/jacoco.xml

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 21
          cache: maven

      - name: Download JaCoCo Report
        uses: actions/download-artifact@v4
        with:
          name: jacoco-merged-report
          path: target/site/jacoco

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify -DskipTests sonar:sonar \
            -Dsonar.projectKey=jcondotta_bank-account-transfers \
            -Dsonar.organization=jcondotta \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

#  docker-publish:
#    name: Build and Push Docker image to Docker Hub
#    runs-on: ubuntu-latest
#    needs: sonarcloud
#
#    env:
#      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ env.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_TOKEN }}
#
#      - name: Build and Push Multi-Arch Docker Image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          platforms: linux/amd64,linux/arm64
#          tags: ${{ env.DOCKER_HUB_USERNAME }}/bank-account-transfers:latest